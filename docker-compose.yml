services:
  db:
    image: ankane/pgvector
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    container_name: django_web
    command: gunicorn Folder.app.wsgi:application --bind 0.0.0.0:8000 --workers 3 --chdir /app/Folder
    volumes:
      - .:/app
    ports:
      - "8080:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PYTHONPATH: /app/Folder
      PYTHONUNBUFFERED: "1"
      DEBUG: "0"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0

  celery:
    build: .
    container_name: celery_worker
    command: celery -A Folder.app worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      PYTHONPATH: /app/Folder
      PYTHONUNBUFFERED: "1"
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      CELERY_BROKER_URL: redis://redis:6379/0

  flower:
    build: .
    container_name: flower_monitor
    command: celery -A Folder.app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      PYTHONPATH: /app/Folder
      CELERY_BROKER_URL: redis://redis:6379/0

volumes:
  pgvector_data:
